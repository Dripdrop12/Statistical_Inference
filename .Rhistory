lambda <- .2
n <- 1000
rexp(n, lambda)
mean(rexp(n,lambda))
1/lambda
sd(rexp(n,lambda))
hist(rexp(n, lambda))
hist(rexp(n, lambda),breaks = 100)
sim <- matrix(rexp(n*sample.size, lambda), n, sample.size)
sample.size <- 40
set.seed(1)
sim <- matrix(rexp(n*sample.size, lambda), n, sample.size)
sim.dat <- rowMeans(sim)
setwd("C:/Users/PDAUSER/Desktop/Statistical_Inference")
mean(sim.dat)
round(mean(sim.dat),2)
hist(sim.dat)
hist(sim.dat,breaks=100)
hist(sim.dat,breaks=100,col="red")
hist(sim.dat,breaks=100,col="red",xlab="Simulated Mean",main="Sample Means")
hist(sim.dat,breaks=100,col="red",main="Sample Means")
hist(sim.dat,breaks=100,col="red",main="Sample Means",xlab="")
abline(a = 5)
abline(h
= 5)
hist(sim.dat,breaks=100,col="red",main="Sample Means",xlab="")
abline(v=1/lambda)
abline(v=1/lambda,lwd=2)
abline(v=mean(sim.dat),lwd=2,col="blue")
abline(v=1/lambda,lwd=1)
lines(density(sim.dat))
hist(sim.dat,breaks=100,col="red",main="Sample Means",xlab="",prob=TRUE)
lines(density(sim.dat))
abline(v=mean(sim.dat),lwd=2,col="blue")
hist(sim.dat,breaks=100,col="red",main="Sample Means",xlab="",prob=TRUE)
lines(density(sim.dat))
abline(v=1/lambda,lwd=2,col="blue")
xdim <- seq(min(sim.dat), max(sim.dat), length=100)
ydim <- dnorm(xfit, mean=1/lambda, sd=(1/lambda/sqrt(sample.size)))
ydim <- dnorm(xdim, mean=1/lambda, sd=(1/lambda/sqrt(sample.size)))
lines(xdim, ydim, pch=22, lty=2, col="blue")
legend('topright', c("simulation", "theoretical"), lty=c(1,2), col=c("red", "blue"))
lines(density(sim.dat),col="red")
lines(density(sim.dat),col="darkred")
legend('topright', c("simulation", "theoretical"), lty=c(1,2), col=c("darkred", "blue"))
hist(sim.dat,breaks=100,col="red",main="Sample Means",xlab="",prob=TRUE)
abline(v=1/lambda,lwd=2,col="blue")
lines(density(sim.dat),col="black")
xdim <- seq(min(sim.dat), max(sim.dat), length=100)
ydim <- dnorm(xdim, mean=1/lambda, sd=(1/lambda/sqrt(sample.size)))
lines(xdim, ydim, pch=22, lty=2, col="blue")
legend('topright', c("simulation", "theoretical"), lty=c(1,2), col=c("black", "blue"))
legend('topright', c("simulation", "theoretical"), lty=c(1,2), col=c("black", "blue"),bty = "n")
hist(sim.dat,breaks=100,col="red",main="Sample Means",xlab="",prob=TRUE)
abline(v=1/lambda,lwd=2,col="blue")
lines(density(sim.dat),col="black")
xdim <- seq(min(sim.dat), max(sim.dat), length=100)
ydim <- dnorm(xdim, mean=1/lambda, sd=(1/lambda/sqrt(sample.size)))
lines(xdim, ydim, pch=22, lty=2, col="blue")
legend('topright', c("simulation", "theoretical"), lty=c(1,2), col=c("black", "blue"),bty = "n")
hist(sim.dat,breaks=100,col="red",main="Theoretical and Simulated Sample Means",xlab="",prob=TRUE)
abline(v=1/lambda,lwd=2,col="blue")
lines(density(sim.dat),col="black")
xdim <- seq(min(sim.dat), max(sim.dat), length=100)
ydim <- dnorm(xdim, mean=1/lambda, sd=(1/lambda/sqrt(sample.size)))
lines(xdim, ydim, pch=22, lty=2, col="blue")
legend('topright', c("Simulation", "Theoretical"), lty=c(1,2), col=c("black", "blue"),bty = "n")
hist(sim.dat,breaks=100,col="red",main="Theoretical and Simulated Sample Means",xlab="",prob=TRUE)
abline(v=1/lambda,lwd=2,col="blue")
lines(density(sim.dat),col="black")
xdim <- seq(min(sim.dat), max(sim.dat), length=100)
ydim <- dnorm(xdim, mean=1/lambda, sd=(1/lambda/sqrt(sample.size)))
lines(xdim, ydim, pch=22, lty=2, col="blue")
legend('topright', c("Simulated", "Theoretical"), lty=c(1,2), col=c("black", "blue"),bty = "n")
qqnorm(sim.dat)
qqline(sim.dat)
hist(sim.dat,breaks=100,col="red",main="Theoretical and Simulated Sample Means",xlab="",prob=TRUE)
abline(v=1/lambda,lwd=2,col="blue")
lines(density(sim.dat),col="black")
xdim <- seq(min(sim.dat), max(sim.dat), length=100)
ydim <- dnorm(xdim, mean=1/lambda, sd=(1/lambda/sqrt(sample.size)))
lines(xdim, ydim, pch=22, lty=2, col="blue")
legend('topright', c("Simulated", "Theoretical"), lty=c(1,2), col=c("black", "blue"),bty = "n")
?rexp
# standard deviation of simulated data #
sim.sd <- sd(sim.dat)
# variance of simulated data #
sim.var <- sim.sd^2
# calculated standard deviation #
theoretical.sd <- (1/lambda)/sqrt(n)
# calculated variance #
theoretical.var <- ((1/lambda)*(1/sqrt(n)))^2
1/lambda
sqrt(n)
sqrt(sample.size)
# calculated standard deviation #
theoretical.sd <- (1/lambda)/sqrt(sample.size)
# calculated variance #
theoretical.var <- ((1/lambda)*(1/sqrt(sample.size)))^2
